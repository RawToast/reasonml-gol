// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Reasongl_web = require("Reasongl/src/web/reasongl_web.js");
var Reprocessing_Common = require("./Reprocessing_Common.js");
var Reprocessing_Matrix = require("./Reprocessing_Matrix.js");
var Reprocessing_Internal = require("./Reprocessing_Internal.js");

function width(env) {
  return env[/* size */18][/* width */1];
}

function height(env) {
  return env[/* size */18][/* height */0];
}

function mouse(env) {
  return env[/* mouse */12][/* pos */0];
}

function pmouse(env) {
  return env[/* mouse */12][/* prevPos */1];
}

function mousePressed(env) {
  return env[/* mouse */12][/* pressed */2];
}

function keyCode(env) {
  return env[/* keyboard */11][/* keyCode */0];
}

function key(key$1, env) {
  return Curry._2(Reprocessing_Common.KeySet[/* mem */2], key$1, env[/* keyboard */11][/* down */3]);
}

function keyPressed(key, env) {
  return Curry._2(Reprocessing_Common.KeySet[/* mem */2], key, env[/* keyboard */11][/* pressed */1]);
}

function keyReleased(key, env) {
  return Curry._2(Reprocessing_Common.KeySet[/* mem */2], key, env[/* keyboard */11][/* released */2]);
}

function size(width, height, env) {
  Curry._3(Reasongl_web.Gl[/* Window */2][/* setWindowSize */6], env[/* window */1], width, height);
  return Reprocessing_Internal.resetSize(env, width, height);
}

function resizeable(resizeable$1, env) {
  env[/* size */18][/* resizeable */2] = resizeable$1;
  return /* () */0;
}

function frameRate(env) {
  return env[/* frame */15][/* rate */1];
}

function frameCount(env) {
  return env[/* frame */15][/* count */0];
}

function deltaTime(env) {
  return env[/* frame */15][/* deltaTime */2];
}

function localizePointf(p, env) {
  return Reprocessing_Matrix.matptmul(Reprocessing_Matrix.matinv(env[/* matrix */16]), p);
}

function localizePoint(param, env) {
  var match = Reprocessing_Matrix.matptmul(Reprocessing_Matrix.matinv(env[/* matrix */16]), /* tuple */[
        param[0],
        param[1]
      ]);
  return /* tuple */[
          match[0] | 0,
          match[1] | 0
        ];
}

function loadSound(path, env) {
  var sound = [/* Loading */0];
  Curry._3(Reasongl_web.Gl[/* Audio */3][/* loadSound */0], env[/* window */1], path, (function (v) {
          var match = sound[0];
          if (typeof match !== "number") {
            if (!match.tag) {
              Curry._4(Reasongl_web.Gl[/* Audio */3][/* playSound */1], env[/* window */1], v, match[0], match[1]);
            }
            
          }
          sound[0] = /* Loaded */Block.__(1, [v]);
          return /* () */0;
        }));
  return sound;
}

function playSound(sound, $staropt$star, $staropt$star$1, env) {
  var volume = $staropt$star ? $staropt$star[0] : 1.0;
  var loop = $staropt$star$1 ? $staropt$star$1[0] : false;
  var match = sound[0];
  if (typeof match === "number") {
    sound[0] = /* ShouldPlay */Block.__(0, [
        volume,
        loop
      ]);
    return /* () */0;
  } else if (match.tag) {
    return Curry._4(Reasongl_web.Gl[/* Audio */3][/* playSound */1], env[/* window */1], match[0], volume, loop);
  } else {
    sound[0] = /* ShouldPlay */Block.__(0, [
        volume,
        loop
      ]);
    return /* () */0;
  }
}

exports.width = width;
exports.height = height;
exports.mouse = mouse;
exports.pmouse = pmouse;
exports.mousePressed = mousePressed;
exports.keyCode = keyCode;
exports.key = key;
exports.keyPressed = keyPressed;
exports.keyReleased = keyReleased;
exports.size = size;
exports.resizeable = resizeable;
exports.frameRate = frameRate;
exports.frameCount = frameCount;
exports.loadSound = loadSound;
exports.playSound = playSound;
exports.deltaTime = deltaTime;
exports.localizePoint = localizePoint;
exports.localizePointf = localizePointf;
/* Reasongl_web Not a pure module */
